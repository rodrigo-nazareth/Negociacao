/******************************************************************************/
/***               Generated by IBExpert 13/04/2020 23:51:30                ***/
/******************************************************************************/

/******************************************************************************/
/***      Following SET SQL DIALECT is just for the Database Comparer       ***/
/******************************************************************************/
SET SQL DIALECT 3;



/******************************************************************************/
/***                                 Tables                                 ***/
/******************************************************************************/


CREATE GENERATOR GEN_NEGOCIACOES_ID;

CREATE TABLE NEGOCIACOES (
    NEGOCIACAO_ID      INTEGER NOT NULL,
    PRODUTOR_ID        INTEGER NOT NULL,
    DISTRIBUIDOR_ID    INTEGER NOT NULL,
    STATUS             CHAR(3) DEFAULT 'PEN' NOT NULL,
    TOTAL              NUMERIC(12,2) NOT NULL,
    DATA_CADASTRO      DATE NOT NULL,
    DATA_APROVACAO     DATE,
    DATA_CONCLUSAO     DATE,
    DATA_CANCELAMENTO  DATE
);




/* Check constraints definition */

ALTER TABLE NEGOCIACOES ADD CONSTRAINT CK_NEGOCIACOES_TOTAL check(TOTAL > 0);
ALTER TABLE NEGOCIACOES ADD CONSTRAINT CK_NEGOCIACOES_STATUS check(STATUS in('PEN','APR','CON','CAN'));
ALTER TABLE NEGOCIACOES ADD CONSTRAINT CK_NEGOC_STATUS_CON_DATA_CONC CHECK (STATUS = 'CON' and DATA_CONCLUSAO is not null or DATA_CONCLUSAO is null);
ALTER TABLE NEGOCIACOES ADD CONSTRAINT CK_NEGOC_STATUS_CANC_DATA_CANC CHECK (STATUS = 'CAN' and DATA_CANCELAMENTO is not null or DATA_CANCELAMENTO is null);
ALTER TABLE NEGOCIACOES ADD CONSTRAINT CK_NEG_STATUS_APROV_DATA_APROV CHECK (STATUS in('APR','CAN', 'CON') and DATA_APROVACAO is not null or DATA_APROVACAO is null);


/******************************************************************************/
/***                              Primary Keys                              ***/
/******************************************************************************/

ALTER TABLE NEGOCIACOES ADD CONSTRAINT PK_NEGOCIACOES PRIMARY KEY (NEGOCIACAO_ID);


/******************************************************************************/
/***                              Foreign Keys                              ***/
/******************************************************************************/

ALTER TABLE NEGOCIACOES ADD CONSTRAINT FK_NEGOCIACOES_DISTRIBUIDOR FOREIGN KEY (DISTRIBUIDOR_ID) REFERENCES PESSOAS (PESSOA_ID);
ALTER TABLE NEGOCIACOES ADD CONSTRAINT FK_NEGOCIACOES_PRODUTOR_ID FOREIGN KEY (PRODUTOR_ID) REFERENCES PESSOAS (PESSOA_ID);


/******************************************************************************/
/***                                Triggers                                ***/
/******************************************************************************/


SET TERM ^ ;



/******************************************************************************/
/***                          Triggers for tables                           ***/
/******************************************************************************/



/* Trigger: NEGOCIACOES_BD0 */
CREATE OR ALTER TRIGGER NEGOCIACOES_BD0 FOR NEGOCIACOES
ACTIVE BEFORE DELETE POSITION 0
AS
begin
  /* Trigger text */
  if (old.status <> 'PEN') then
    exception EXCLUSAO_NEGOCIACAO_APROV;

  if (
    exists
    (
      select negociacao_id from negociacoes
      where (old.status = 'APR')
    )
   ) then exception EXCLUSAO_NEGOCIACAO_APROV;

  if (
    exists
    (
      select negociacao_id from negociacoes
      where (old.status = 'CON')
    )
   ) then exception EXCLUSAO_NEGOCIACAO_CONC;

  if (
    exists
    (
      select negociacao_id from negociacoes
      where (old.status = 'CAN')
    )
   ) then exception EXCLUSAO_NEGOCIACAO_CANC;

  update limites_credito_produtor set limite_credito_utilizado = limite_credito_utilizado - old.total
  where produtor_id = old.produtor_id
  and distribuidor_id = old.distribuidor_id;

  delete from itens_negociacao where negociacao_id = old.negociacao_id;
end
^


/* Trigger: NEGOCIACOES_BI */
CREATE OR ALTER TRIGGER NEGOCIACOES_BI FOR NEGOCIACOES
ACTIVE BEFORE INSERT POSITION 0
as
begin
  if (new.negociacao_id is null) then
    new.negociacao_id = gen_id(gen_negociacoes_id,1);

  new.data_cadastro = current_date;
  new.status = 'PEN';
end
^


/* Trigger: NEGOCIACOES_BIU0 */
CREATE OR ALTER TRIGGER NEGOCIACOES_BIU0 FOR NEGOCIACOES
ACTIVE BEFORE INSERT OR UPDATE POSITION 0
AS
begin
  /* Trigger text */
  if (new.status = 'APR') then
    update limites_credito_produtor set limite_credito_utilizado = limite_credito_utilizado + new.total
    where produtor_id = new.produtor_id
    and distribuidor_id = new.distribuidor_id;
  else if (new.status in('CAN','CON')) then
    update limites_credito_produtor set limite_credito_utilizado = limite_credito_utilizado - new.total
    where produtor_id = new.produtor_id
    and distribuidor_id = new.distribuidor_id;

end
^


/* Trigger: NEGOCIACOES_BU0 */
CREATE OR ALTER TRIGGER NEGOCIACOES_BU0 FOR NEGOCIACOES
ACTIVE BEFORE UPDATE POSITION 0
AS
begin
  if (new.status = 'APR') then
    new.data_aprovacao = CURRENT_DATE;
  else if (new.status = 'CON') then
    new.data_conclusao = CURRENT_DATE;
  else if (new.status = 'CAN') then
    new.data_cancelamento = CURRENT_DATE;
end
^


SET TERM ; ^



/******************************************************************************/
/***                              Descriptions                              ***/
/******************************************************************************/

COMMENT ON TABLE NEGOCIACOES IS 
'Descrição dos tipos da coluna STATUS
PEN - PENDENTE
APR - Aprovada
CON - Concluída
CAN - Cancelada';



/******************************************************************************/
/***                               Privileges                               ***/
/******************************************************************************/
